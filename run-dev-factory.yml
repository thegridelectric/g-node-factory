# Under construction
# Basic plan:

# Stage 1: while this factory is creating NFTs but doing it as a python application with
# a centralized database, inbound calls to the factory happen as rabbit messages.
#
# This file will run a local Dockerfile with that python based GNodeFactory

# Stage 2: the factory will be a stateful smart contract. Since we are building on
# the AlgoShip example for this, that will likely be a node-based Dockerfile instead.
#  Not sure if we will keep the rabbit-based interface, replace it with a more standard
# ABI for a smart contract, or perhaps allow for both.

version: "3.5"

networks:
  dev:

services:
  algod:
    container_name: "algorand-sandbox-algod"
    image: "jessmillar/algod_sandbox_for_ci:latest"
    ports:
      - 4001:4001
      - 4002:4002
      - 9392:9392

  indexer:
    container_name: "algorand-sandbox-indexer"
    image: "jessmillar/algod_sandbox_indexer_for_ci:latest"
    ports:
      - 8980:8980
    restart: unless-stopped
    environment:
      DISABLED: "true"
      PORT: "8980"
      SNAPSHOT: ""
      CONNECTION_STRING: "host=indexer-db port=5432 user=algorand password=algorand dbname=indexer_db sslmode=disable"
      ALGOD_ADDR: "algod:4001"
      ALGOD_TOKEN: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
      INDEXER_ENABLE_ALL_PARAMETERS: "${INDEXER_ENABLE_ALL_PARAMETERS:-false}"
    depends_on:
      - indexer-db
      - algod
  indexer-db:
    image: "postgres:13-alpine"
    container_name: "algorand-sandbox-postgres"
    ports:
      - 5433:5432
    user: postgres
    environment:
      POSTGRES_USER: algorand
      POSTGRES_PASSWORD: algorand
      POSTGRES_DB: indexer_db
  rabbit-broker:
    networks:
      - "dev"
    hostname: rmq
    container_name: dev-registry_rabbit
    image: "jessmillar/dev-registry-rabbit:latest"
    ports:
      - 4369:4369
      - 5672:5672
      - 15672:15672
      - 15674:15674
      - 25672:25672
    env_file: ./docker/dev_vhost.env
    environment:
      - RABBITMQ_USERNAME=smqPublic
      - RABBITMQ_PASSWORD=smqPublic
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbitmq_management load_definitions "/tmp/rabbit_definitions.json"
      - RABBITMQ_PLUGINS=rabbitmq_management,rabbitmq_stomp,rabbitmq_web_stomp
    volumes:
      - ./docker/dev_rabbitmq.conf:/opt/bitnami/rabbitmq/etc/rabbitmq/rabbitmq.conf:ro

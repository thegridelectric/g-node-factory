# Under construction
# Basic plan:

# Stage 1: while this factory is creating NFTs but doing it as a python application with
# a centralized database, inbound calls to the factory happen as rabbit messages.
#
# This file will run a local Dockerfile with that python based GNodeFactory

# Stage 2: the factory will be a stateful smart contract. Since we are building on
# the AlgoShip example for this, that will likely be a node-based Dockerfile instead.
#  Not sure if we will keep the rabbit-based interface, replace it with a more standard
# ABI for a smart contract, or perhaps allow for both.

version: "3.5"

networks:
  dev:

services:
  dev-ta-daemon:
      container_name: dev-python-ta-daemon
      image: "jessmillar/python-ta-daemon:latest"
      ports:
        - 8002:8000
  registry-broker:
    networks:
      - "dev"
    hostname: registrybroker
    container_name: dev-registry-rabbit
    image: "jessmillar/dev-registry-rabbit-x86:latest"
    ports:
      - 4369:4369
      - 5672:5672
      - 15672:15672
      - 15674:15674
      - 25672:25672
    env_file: ./for_docker/dev_vhost.env
    environment:
      - RABBITMQ_USERNAME=smqPublic
      - RABBITMQ_PASSWORD=smqPublic
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbitmq_management load_definitions "/tmp/rabbit_definitions.json"
      - RABBITMQ_PLUGINS=rabbitmq_management,rabbitmq_stomp,rabbitmq_web_stomp
    volumes:
      - ./for_docker/dev_rabbitmq.conf:/opt/bitnami/rabbitmq/etc/rabbitmq/rabbitmq.conf:ro
